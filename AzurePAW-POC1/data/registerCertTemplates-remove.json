{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adcsVMName": {
      "type": "string",
      "metadata": {
        "description": "The VM name of ADCS Server"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The domain name"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },
    "assetLocationStorageAccount": {
      "type": "string",
      "metadata": {
        "description": "The location of resources that the script is dependent on such as linked templates and DSC modules"
      }
    },
    "storageAccountKeyviaKeyvault": {
      "type": "securestring",
      "metadata": {
        "description": "Key for the Storage account"
      }
    }
  },
  "variables": {
    "psScriptURL": "[concat(parameters('assetLocationStorageAccount'),'/scripts/Register-CertificateTemplates.ps1')]"
  },
  "resources": [
    {
      "name": "[concat(parameters('adcsVMName'),'/RegisterCertificateTemplatesOnCA')]",
      "comments": "Register Certificate Templates on CA via Script extension",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('psScriptURL')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File Register-CertificateTemplates.ps1 -user ',parameters('adminUsername'),' -password ',parameters('adminPassword'),'')]",
          "storageAccountName": "azurepaw",
          "storageAccountKey": "[parameters('storageAccountKeyviaKeyvault')]"
        }
      }
    }
  ],
  "outputs": {}
}