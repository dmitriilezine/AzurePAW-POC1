{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "subscriptionID": {
      "type": "string",
      "metadata": {
        "description": "Subscription ID is used to provide access path to the Key Vault"
      },
      "defaultValue": "Copy and Paste Subscription ID here. It is provided on the instructions OneNote page."
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Current deployment supports top level domain name only, for example contoso.com, fabrikam.com etc"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      },
      "defaultValue": "labadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain. If you do not change it, then it will look like this: Subscription#SUBSCRIPTIONID"
      },
      "defaultValue": "[concat('Subscription#',subscription().subscriptionId)]"
    },
    "sourceClientIP": {
      "type": "string",
      "metadata": {
        "description": "Internet IP of the computer that will RDP into this lab. Change this to * to allow all Internet devices to brute force your lab or find out external IP or subnet for your device to lock down access to your lab from the Internet. Choice is yours."
      },
      "defaultValue": "127.0.0.1"
    },
    "numberOfRdshInstances": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [ 2 ],
      "metadata": {
        "description": "Number of RemoteDesktopSessionHosts"
      }
    },
    "vaultName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Key Vault where secrets are stored"
      }
    },
    "KeyVaultRG": {
      "type": "string",
      "metadata": {
        "description": "The name of the RG where Key Vault is stored"
      }
    },
    "CertID": {
      "type": "string",
      "metadata": {
        "description": "The cert container and id from the AKV, for example mycertcontainer/453l4k5j3lk45jk235jl3k5j34 "
      }
    },
    "ADFSServiceCert": {
      "type": "string",
      "metadata": {
        "description": "subject name of the external cert for ADFS "
      }
    },
    "deployHGSServer": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "No",
        "Yes"
      ],
      "metadata": {
        "description": "Deploy HGS Server"
      }
    },
    "deployPSVPN": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "No",
        "Yes"
      ],
      "metadata": {
        "description": "Deploy Point to Site VPN"
      }
    }
  },
  "variables": {
    "assetLocation": "https://raw.githubusercontent.com/dmitriilezine/AzurePAW-POC1/master/AzurePAW-POC1",
    "assetLocationStorageAccount": "https://azurepaw.blob.core.windows.net",
    "VMSize": "Standard_A2",
    "OSVersion": "2016-Datacenter",
    "numberOfRdshInstances": 2,
    "virtualNetworkAddressRange": "10.0.0.0/16",
    "backendNetworkSubnet": "10.0.1.0/24",
    "frontendNetworkSubnet": "10.0.2.0/24",
    "azurepawNetworkSubnet": "10.0.3.0/24",
    "gatewayNetworkSubnet": "10.0.4.0/24",
    "primaryDC1IpAddress": "10.0.1.4",
    "primaryDC2IpAddress": "10.0.1.5",
    "primaryADCSIpAddress": "10.0.1.6",
    "primaryAADConnectIpAddress": "10.0.1.7",
    "primaryADFSIpAddress": "10.0.1.8",
    "primaryADFS2IpAddress": "10.0.1.10",
    "primaryHGSIpAddress": "10.0.1.9",
    "primaryADFSProxyIpAddress": "10.0.2.5",
    "primaryJumpServerIpAddress": "10.0.2.4",
    "primaryAzurePAW1IpAddress": "10.0.3.4",
    "primaryAzurePAW2IpAddress": "10.0.3.5",
    "primaryAzurePAW3IpAddress": "10.0.3.6",
    "primaryCB1IpAddress": "10.0.3.15",
    "primaryCB2IpAddress": "10.0.3.16",
    "primaryGW1IpAddress": "10.0.3.17",
    "primaryGW2IpAddress": "10.0.3.18",
    "primaryAADProxy1IpAddress": "10.0.3.20",
    "primaryAADProxy2IpAddress": "10.0.3.21",

    "vnetTemplateURL": "[concat(variables('assetLocation'),'/data/vNetDeployment.json')]",
    "nsgTemplateURL": "[concat(variables('assetLocation'),'/data/nsgDeployment.json')]",
    "publicIPTemplateURL": "[concat(variables('assetLocation'),'/data/publicIP.json')]",
    "psVPNTemplateURL": "[concat(variables('assetLocation'),'/data/deployPointSiteVPN.json')]",
    "dc1TemplateURL": "[concat(variables('assetLocation'),'/data/dc1Vm.json')]",
    "dc2TemplateURL": "[concat(variables('assetLocation'),'/data/dc2Vm.json')]",
    "adcsVMTemplateURL": "[concat(variables('assetLocation'),'/data/adcsVm.json')]",
    "aadConnectVMTemplateURL": "[concat(variables('assetLocation'),'/data/aadConnectVm.json')]",
    "adfsVMTemplateURL": "[concat(variables('assetLocation'),'/data/adfsVm.json')]",
    "adfsProxyVMTemplateURL": "[concat(variables('assetLocation'),'/data/adfsProxyVm.json')]",
    "jumpServerTemplateURL": "[concat(variables('assetLocation'),'/data/jumpServerVm.json')]",
    "AzurePAW1VMTemplateURL": "[concat(variables('assetLocation'),'/data/PAW1VM.json')]",
    "AzurePAW2VMTemplateURL": "[concat(variables('assetLocation'),'/data/PAW2VM.json')]",
    "hgsVMTemplateURL": "[concat(variables('assetLocation'),'/data/deployhgsVM.json')]",

    "deployPrimaryAdTemplateURL": "[concat(variables('assetLocation'),'/data/deployPrimaryAD.json')]",
    "deployDC2AdTemplateURL": "[concat(variables('assetLocation'),'/data/promoteSecondDC.json')]",
    "deployADCSTemplateURL": "[concat(variables('assetLocation'),'/data/deployADCS.json')]",
    "createCertificateTemplatesTemplateURL": "[concat(variables('assetLocation'),'/data/createCertTemplates.json')]",
    "adfsFarmTemplatesTemplateURL": "[concat(variables('assetLocation'),'/data/adfsfarm.json')]",
    "deployAADConnectTemplateURL": "[concat(variables('assetLocation'),'/data/deployAADConnect.json')]",
    "deployADFSTemplateURL": "[concat(variables('assetLocation'),'/data/deployADFS.json')]",
    "deployADFS2TemplateURL": "[concat(variables('assetLocation'),'/data/deployADFSonSecondVM.json')]",
    "deployADFSProxyTemplateURL": "[concat(variables('assetLocation'),'/data/deployADFSProxy.json')]",
    "deployHGSTemplateURL": "[concat(variables('assetLocation'),'/data/deployHGS.json')]",
    "deployDIADTemplateURL": "[concat(variables('assetLocation'),'/data/deployDIAD.json')]",
    "deployRDCBTemplateURL": "[concat(variables('assetLocation'),'/data/deployRDCB.json')]",
    "deployRDGWTemplateURL": "[concat(variables('assetLocation'),'/data/deployRDGW.json')]",
    "deployRDSHTemplateURL": "[concat(variables('assetLocation'),'/data/deployRDSH.json')]",
    "deployAADProxyTemplateURL": "[concat(variables('assetLocation'),'/data/deployAADProxy.json')]",

    "dc1VMName": "[substring(concat('DC1-',resourceGroup().Name),0,5)]",
    "dc2VMName": "[substring(concat('DC2-',resourceGroup().Name),0,5)]",
    "adcsVMName": "[substring(concat('CA1-',resourceGroup().Name),0,5)]",
    "aadConnectVMName": "[substring(concat('AADC1',resourceGroup().Name),0,5)]",
    "jumpVMName": "[substring(concat('JumpBox',resourceGroup().Name),0,7)]",
    "adfsVMName": "[substring(concat('ADFS1',resourceGroup().Name),0,5)]",
    "adfsVM2Name": "[substring(concat('ADFS2',resourceGroup().Name),0,5)]",
    "adfsProxyVMName": "[substring(concat('ADFSProxy',resourceGroup().Name),0,9)]",
    "hgsVMName": "[substring(concat('HGS-',resourceGroup().Name),0,5)]",
    "paw1VMName": "[substring(concat('PAW-1',resourceGroup().Name),0,5)]",
    "paw2VMName": "[substring(concat('PAW-2',resourceGroup().Name),0,5)]",
    "paw3VMName": "[substring(concat('PAW-3',resourceGroup().Name),0,5)]",
    "cb1VMName": "[substring(concat('CB1-',resourceGroup().Name),0,5)]",
    "cb2VMName": "[substring(concat('CB2-',resourceGroup().Name),0,5)]",
    "gw1VMName": "[substring(concat('GW1-',resourceGroup().Name),0,5)]",
    "gw2VMName": "[substring(concat('GW2-',resourceGroup().Name),0,5)]",
    "aadProxy1VMName": "[substring(concat('AADProxy1',resourceGroup().Name),0,9)]",
    "aadProxy2VMName": "[substring(concat('AADProxy2',resourceGroup().Name),0,9)]",

    "dnsPrefix": "[tolower(concat(resourceGroup().name,'jump'))]",

    "dc1VmDeployment": "CreateADDC1VM",
    "dc1VmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('dc1VmDeployment'))]",
    "dc2VmDeployment": "CreateADDC2VM",
    "dc2VmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('dc2VmDeployment'))]",
    "deployVNet": "DeployVNet",
    "deployVNetId": "[concat('Microsoft.Resources/deployments/', variables('deployVNet'))]",
    "deployNSGs": "DeployNSGs",
    "deployNSGsId": "[concat('Microsoft.Resources/deployments/', variables('deployNSGs'))]",
    "deployPrimaryAd": "ConfigureAD",
    "deployPrimaryAdId": "[concat('Microsoft.Resources/deployments/', variables('deployPrimaryAd'))]",
    "deployDC2Ad": "PromoteDC2toAD",
    "deployDC2AdId": "[concat('Microsoft.Resources/deployments/', variables('deployDC2Ad'))]",
    "updateVNetDNS1": "UpdateVNetDNS",
    "updateVNetDNS2": "UpdateVNetDNS2",
    "vnetwithDNSTemplateURL": "[concat(variables('assetLocation'),'/data/vnetDNSupdate.json')]",
    "adcsVmDeployment": "CreateADCSVM",
    "adcsVmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('adcsVmDeployment'))]",
    "aadConnectVmDeployment": "CreateAADConnectVM",
    "aadConnectVmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('aadConnectVmDeployment'))]",
    "jumpVmDeployment": "CreateJumpBoxVM",
    "jumpVmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('jumpVmDeployment'))]",
    "adfsVmDeployment": "CreateADFSVM",
    "adfsVmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('adfsVmDeployment'))]",
    "adfsVm2Deployment": "CreateADFSVM2",
    "adfsVm2DeploymentId": "[concat('Microsoft.Resources/deployments/', variables('adfsVm2Deployment'))]",
    "adfsProxyVmDeployment": "CreateADFSProxyVM",
    "adfsProxyVmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('adfsProxyVmDeployment'))]",
    "hgsVmDeployment": "CreateHGSVM",
    "hgsVmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('hgsVmDeployment'))]",
    "hgsDeployment": "DeployHGSonVM",
    "hgsDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('hgsDeployment'))]",
    "paw1VMDeployment": "CreatePAW1VM",
    "paw1DeploymentId": "[concat('Microsoft.Resources/deployments/', variables('paw1VMDeployment'))]",
    "paw2VMDeployment": "CreatePAW2VM",
    "paw2VMDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('paw2VMDeployment'))]",
    "paw3VMDeployment": "CreatePAW3VM",
    "paw3VMDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('paw3VMDeployment'))]",
    "adcsDeployment": "DeployADCS",
    "adcsDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('adcsDeployment'))]",
    "createADCSTemplatesDeployment": "CreateADCSTemplates",
    "createADCSDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('createADCSTemplatesDeployment'))]",
    "adfsFarmTemplatesDeployment": "DeployADFSFarm",
    "adfsFarmTemplatesDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('adfsFarmTemplatesDeployment'))]",
    "adfsFarmTemplatesDeploymentonVM2": "DeployADFSFarmonVM2",
    "adfsFarmTemplatesDeploymentonVM2Id": "[concat('Microsoft.Resources/deployments/', variables('adfsFarmTemplatesDeploymentonVM2'))]",
    "aadconnectDeployment": "DownloadInstalAADConnect",
    "aadconnectDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('aadconnectDeployment'))]",
    "psVPNDeployment": "DeployPointSiteVPN",
    "psVPNDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('psVPNDeployment'))]",
    "DIADouGPODeployment": "DeployDIAD-OUs-GPOs",
    "DIADouGPODeploymentId": "[concat('Microsoft.Resources/deployments/', variables('DIADouGPODeployment'))]",
    "cb1VMDeployment": "CreateCB1VM",
    "cb1VMDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('cb1VMDeployment'))]",
    "cb2VMDeployment": "CreateCB2VM",
    "cb2VMDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('cb2VMDeployment'))]",
    "gw1VMDeployment": "CreateGW1VM",
    "gw1VMDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('gw1VMDeployment'))]",
    "gw2VMDeployment": "CreateGW2VM",
    "gw2VMDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('gw2VMDeployment'))]",
    "aadProxy1VMDeployment": "CreateAADProxy1VM",
    "aadProxy1VMDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('aadProxy1VMDeployment'))]",
    "aadProxy2VMDeployment": "CreateAADProxy2VM",
    "aadProxy2VMDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('aadProxy2VMDeployment'))]",
    "cb1Deployment": "DeployRDCB-RDLS",
    "cb1DeploymentId": "[concat('Microsoft.Resources/deployments/', variables('cb1Deployment'))]",
    "gw1Deployment": "DeployRDGW-RDWeb",
    "gw1DeploymentId": "[concat('Microsoft.Resources/deployments/', variables('gw1Deployment'))]",
    "rdshDeploymentOnPAW1": "DeployRDSHonPAW1",
    "rdshDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('rdshDeploymentOnPAW1'))]",
    "rdshDeploymentOnPAW2": "DeployRDSHonPAW2",
    "rdshDeploymentPAW2Id": "[concat('Microsoft.Resources/deployments/', variables('rdshDeploymentOnPAW2'))]",
    "aadProxy1Deployment": "DeployAADProxy",
    "aadProxy1DeploymentId": "[concat('Microsoft.Resources/deployments/', variables('aadProxy1Deployment'))]",

    "shortDomainName": "[split(parameters('domainName'),'.')[0]]",
    "domainSuffix": "[split(parameters('domainName'),'.')[1]]",
    "ouPathT0Devices": "[concat('OU=T0-Devices; OU=Tier 0; OU=Admin;', 'DC=',variables('shortDomainName'),'; DC=',variables('domainSuffix'))]",
    "ouPathNone": "",

    "configurationFunctionDSConADFSvm1": "DeployADFS.ps1\\InstallADFSFarm",
    "configurationFunctionDSConADFSvm2": "DeployADFS.ps1\\InstallADFSFarmonADFSvm2",

    "vaultName": "[parameters('vaultName')]",
    "secretName": "AzurePAWPOC1SAKey2",
    "secretnameSASurl": "AzurePAWPOC1SAS",
    "KeyVaultRG": "[parameters('KeyVaultRG')]",
    "keyVaultID": "[concat('/subscriptions/', parameters('subscriptionID'), '/resourceGroups/', variables('KeyVaultRG'), '/providers/Microsoft.KeyVault/vaults/', variables('vaultName'))]",
    "CertForADFS": "[concat('https://', parameters('vaultName'), '.vault.azure.net:443/secrets/', parameters('certID'))]",

    "adAvailabilitySetName": "addsAvailabiltySet",
    "cbAvailabilitySetName": "cbAvailabiltySet",
    "gwAvailabilitySetName": "gwAvailabiltySet",
    "rdshAvailabilitySetName": "rdshAvailabiltySet",
    "aadProxyAvailabilitySetName": "aadProxyAvailabiltySet",
    "adfsAvailabilitySetName": "adfsAvailabiltySet",

    "imageOffer": "WindowsServer",
    "imagePublisher": "MicrosoftWindowsServer",

    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "publiclbID": "[resourceId('Microsoft.Network/loadBalancers',variables('publicLBName'))]",
    "publiclbFEConfigID": "[concat(variables('publiclbID'),'/frontendIPConfigurations/',variables('lbFE'))]",
    "rdpNATRuleID": "[concat(variables('publiclbID'),'/inboundNatRules/',variables('rpdNAT'))]",
    "deployPublicIP": "DeployPublicIP",
    "deployPublicIPId": "[concat('Microsoft.Resources/deployments/', variables('deployPublicIP'))]",
    "publicLBName": "[concat('ADPLB',resourceGroup().name)]",
    "publicIPAddressName": "[concat('ADlbPublicIP',resourceGroup().name)]",
    "lbFE": "[concat('ADLBFE',resourceGroup().name)]",
    "rpdNAT": "[concat('ADRDPNAT',resourceGroup().name)]",
    "rdpPort": "3389",

    "beNSGName": "[concat('BackEndNSG',resourceGroup().name)]",
    "beNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('beNSGName'))]",
    "feNSGName": "[concat('FrontEndNSG',resourceGroup().name)]",
    "feNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('feNSGName'))]",
    "pawNSGName": "[concat('PAW-NSG',resourceGroup().name)]",
    "pawNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('pawNSGName'))]",

    "dc1NICName": "[concat('DC1-Nic',resourceGroup().name)]",
    "dc2NICName": "[concat('DC2-Nic',resourceGroup().name)]",
    "adcsNICName": "[concat('ADCS-Nic',resourceGroup().name)]",
    "aadconnectNICName": "[concat('AADC-Nic',resourceGroup().name)]",
    "jumpNICName": "[concat('JumpBoxNic',resourceGroup().name)]",
    "adfsNICName": "[concat('ADFS-Nic',resourceGroup().name)]",
    "adfs2NICName": "[concat('ADFS2-Nic',resourceGroup().name)]",
    "adfsproxyNICName": "[concat('ADFSP-Nic',resourceGroup().name)]",
    "hgsNICName": "[concat('HGS-Nic',resourceGroup().name)]",
    "paw1NICName": "[concat('PAW1-Nic',resourceGroup().name)]",
    "paw2NICName": "[concat('PAW2-Nic',resourceGroup().name)]",
    "paw3NICName": "[concat('PAW3-Nic',resourceGroup().name)]",
    "cb1NICName": "[concat('CB1-Nic',resourceGroup().name)]",
    "cb2NICName": "[concat('CB2-Nic',resourceGroup().name)]",
    "gw1NICName": "[concat('GW1-Nic',resourceGroup().name)]",
    "gw2NICName": "[concat('GW2-Nic',resourceGroup().name)]",
    "aadProxy1NICName": "[concat('AADProxy1-Nic',resourceGroup().name)]",
    "aadProxy2NICName": "[concat('AADProxy2-Nic',resourceGroup().name)]",

    "virtualNetworkName": "[concat('ADVNET',resourceGroup().name)]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "backendSubnetName": "[concat('BackEndSubnet',resourceGroup().name)]",
    "backendSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('backendSubnetName'))]",
    "frontendSubnetName": "[concat('FrontEndSubnet',resourceGroup().name)]",
    "frontendSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('frontendSubnetName'))]",
    "pawSubnetName": "[concat('pawSubnet',resourceGroup().name)]",
    "pawSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('pawSubnetName'))]",
    "gatewaySubnetName": "GatewaySubnet",
    "gatewaySubnetID": "[concat(variables('vnetID'),'/subnets/',variables('gatewaySubnetName'))]",
    "gatewayPublicIPName": "[concat('PSVPN-IP',resourceGroup().name)]",
    "gatewayName": "[concat('PSVPN',resourceGroup().name)]",
    "gatewaySKU": "Basic",
    "vpnClientAddressPool": "192.168.100.0/24",
    "CAName": "[concat(variables('shortDomainName'),'CA')]",
    "CAData": "MIICPzCCAaygAwIBAgIQG4WTVfGKqLxMRtKuPFJ4cDAJBgUrDgMCHQUAMC8xLTArBgNVBAMTJFN5ZG5leUF6dXJlQXV0aGVudGljYXRpb25DZXJ0aWZpY2F0ZTAeFw0xMTA2MDkyMzA0NDBaFw0zOTEyMzEyMzU5NTlaMC8xLTArBgNVBAMTJFN5ZG5leUF6dXJlQXV0aGVudGljYXRpb25DZXJ0aWZpY2F0ZTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAtPSIGf2+yUDyT8aLB6sZBg2jXKRKfFS+VnM8JX1JxR2bHb5J8vUy8O6WCwcpxqCHpSV2PIXEWNBM2ozGjcaBzMCi53Q+EQvdaGwF7LJHKSL9Iv//uFlkGoKdz6r8yL9HebTH+F6OvIQ8qNxHKtZgRhqB0gMv0dS/qigGmLcDenUCAwEAAaNkMGIwYAYDVR0BBFkwV4AQkVkBKQrptsuAIFPicVM+haExMC8xLTArBgNVBAMTJFN5ZG5leUF6dXJlQXV0aGVudGljYXRpb25DZXJ0aWZpY2F0ZYIQG4WTVfGVqLxMRtKuPFJ4cDAJBgUrDgMCHQUAA4GBAElx6ydJNP8EjIbgppSY39lJKnMWBVqP8u0HXuNc3LkGUTBu0CYNhhR+MM969uX2ykiUkENeGUHykThWJdoAp+yyPWK+/OT9poE5cvNyX5W8ql4vRgeGMew1VQzTHCSx+ZvXtKeSa31Kgf7ZeXQ/3mty1MQUKilCIZPHXqx5GILl",

    "subnets": [
      {
        "name": "[variables('backendSubnetName')]",
        "properties": {
          "addressPrefix": "[variables('backendNetworkSubnet')]",
          "networkSecurityGroup": {
            "id": "[variables('beNSGID')]"
          }
        }
      },
      {
        "name": "[variables('frontendSubnetName')]",
        "properties": {
          "addressPrefix": "[variables('frontendNetworkSubnet')]",
          "networkSecurityGroup": {
            "id": "[variables('feNSGID')]"
          }
        }
      },
      {
        "name": "[variables('pawSubnetName')]",
        "properties": {
          "addressPrefix": "[variables('azurepawNetworkSubnet')]",
          "networkSecurityGroup": {
            "id": "[variables('pawNSGID')]"
          }
        }
      },
      {
        "name": "[variables('gateWaySubnetName')]",
        "properties": {
          "addressPrefix": "[variables('gateWayNetworkSubnet')]"
        }
      }
    ]
  },
  "resources": [
    {
      "name": "[variables('adAvailabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformUpdateDomainCount": 3,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[variables('cbAvailabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformUpdateDomainCount": 3,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[variables('gwAvailabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformUpdateDomainCount": 3,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[variables('rdshAvailabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformUpdateDomainCount": 20,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[variables('aadProxyAvailabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformUpdateDomainCount": 3,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[variables('adfsAvailabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformUpdateDomainCount": 3,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[variables('deployNSGs')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('nsgTemplateURL')]" },
        "parameters": {
          "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
          "subnets": { "value": "[ variables('subnets')]" },
          "vNetID": { "value": "[variables('vnetID')]" },
          "beNSGName": { "value": "[variables('beNSGName')]" },
          "feNSGName": { "value": "[variables('feNSGName')]" },
          "pawNSGName": { "value": "[variables('pawNSGName')]" },
          "beSubnetName": { "value": "[variables('backendSubnetName')]" },
          "feSubnetName": { "value": "[variables('frontendSubnetName')]" },
          "pawSubnetName": { "value": "[variables('pawSubnetName')]" },
          "beSubnetId": { "value": "[variables('backendSubnetID')]" },
          "feSubnetId": { "value": "[variables('frontendSubnetID')]" },
          "pawSubnetId": { "value": "[variables('pawSubnetID')]" },
          "sourceClientIP": { "value": "[parameters('sourceClientIP')]" }
        }
      }
    },
    {
      "name": "[variables('deployVNet')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployNSGsId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('vnetTemplateURL')]" },
        "parameters": {
          "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
          "subnets": { "value": "[ variables('subnets') ]" },
          "virtualNetworkAddressRange": { "value": "[variables('virtualNetworkAddressRange')]" }
        }
      }
    },
    {
      "name": "[variables('deployPublicIP')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployVNetId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('publicIPTemplateURL')]" },
        "parameters": {
          "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
          "subnets": { "value": "[ variables('subnets') ]" },
          "virtualNetworkAddressRange": { "value": "[variables('virtualNetworkAddressRange')]" },
          "publicIPAddressName": { "value": "[variables('publicIPAddressName')]" },
          "dnsPrefix": { "value": "[variables('dnsPrefix')]" },
          "publicLBName": { "value": "[variables('publicLBName')]" },
          "lbFE": { "value": "[variables('lbFE')]" },
          "rpdNAT": { "value": "[variables('rpdNAT')]" },
          "rdpPort": { "value": "[variables('rdpPort')]" }
        }
      }
    },
    {
      "condition": "[equals(parameters('deployPSVPN'),'Yes')]",
      "name": "[variables('psVPNDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployVNetId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('psVPNTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "gatewaySubnetPrefix": {
            "value": "[variables('gatewayNetworkSubnet')]"
          },
          "gatewayPublicIPName": {
            "value": "[variables('gatewayPublicIPName')]"
          },
          "gatewayName": {
            "value": "[variables('gatewayName')]"
          },
          "gatewaySku": {
            "value": "[variables('gatewaySKU')]"
          },
          "vpnClientAddressPoolPrefix": {
            "value": "[variables('vpnClientAddressPool')]"
          },
          "clientRootCertName": {
            "value": "[variables('CAName')]"
          },
          "clientRootCertData": {
            "value": "[variables('CAData')]"
          }
        }
      }
    },
    {
      "name": "[variables('dc1VmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets',variables('adAvailabilitySetName'))]",
        "[variables('deployVNetId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('dc1TemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('backendSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('dc1VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "adDNicName": {
            "value": "[variables('dc1NICName')]"
          },
          "primaryAdIpAddress": {
            "value": "[variables('primaryDC1IpAddress')]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('adAvailabilitySetName')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployPrimaryAd')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('dc1VmDeploymentId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployPrimaryAdTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dc1VMName": {
            "value": "[variables('dc1VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "name": "[variables('dc2VmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]",
        "[resourceId('Microsoft.Compute/availabilitySets',variables('adAvailabilitySetName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('dc2TemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('backendSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('dc2VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('dc2NICName')]"
          },
          "assetLocation": {
            "value": "[variables('assetLocation')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryDC2IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('adAvailabilitySetName')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployDC2AD')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('dc2VmDeploymentId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployDC2AdTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dc2VMName": {
            "value": "[variables('dc2VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocation": {
            "value": "[variables('assetLocation')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "name": "[variables('updateVNetDNS1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployPrimaryAdId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetwithDNSTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "dnsServerAddress": {
            "value": [ "[variables('primaryDC1IpAddress')]" ]
          }
        }
      }
    },
    {
      "name": "[variables('updateVNetDNS2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployPrimaryAdId')]",
        "[variables('deployDC2AdId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetwithDNSTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "dnsServerAddress": {
            "value": [
              "[variables('primaryDC1IpAddress')]",
              "[variables('primaryDC2IpAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "[variables('jumpVmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployPublicIPId')]",
        "[variables('updateVNetDNS1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('jumpServerTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('frontendSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('jumpVMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "jumpNicName": {
            "value": "[variables('jumpNICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryJumpServerIpAddress')]"
          },
          "adRDPNATRuleID": {
            "value": "[variables('rdpNATRuleID')]"
          }
        }
      }
    },
    {
      "comments": "Deploy ADCS VM",
      "name": "[variables('adcsVmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('adcsVMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('backendSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('adcsVMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('adcsNICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryADCSIpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          }
        }
      }
    },
    {
      "comments": "Deploy Azure AD Connect VM",
      "name": "[variables('aadConnectVmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]",
        "[variables('DIADouGPODeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('aadConnectVMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('backendSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('aadConnectVMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('aadconnectNICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryAADConnectIpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          }
        }
      }
    },
    {
      "comments": "Deploy ADFS VM",
      "name": "[variables('adfsVmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]",
        "[variables('DIADouGPODeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('adfsVMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('backendSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('adfsVMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('adfsNICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryADFSIpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('adfsAvailabilitySetName')]"
          },
          "keyVaultID": {
            "value": "[variables('keyVaultID')]"
          },
          "CertForADFS": {
            "value": "[variables('CertForADFS')]"
          }
        }
      }
    },
    {
      "comments": "Deploy ADFS VM 2",
      "name": "[variables('adfsVm2Deployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]",
        "[variables('DIADouGPODeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('adfsVMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('backendSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('adfsVM2Name')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('adfs2NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryADFS2IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('adfsAvailabilitySetName')]"
          },
          "keyVaultID": {
            "value": "[variables('keyVaultID')]"
          },
          "CertForADFS": {
            "value": "[variables('CertForADFS')]"
          }
        }
      }
    },
    {
      "comments": "Deploy ADFS Proxy VM. It is deployed if ADFS VM is deployed first.",
      "name": "[variables('adfsProxyVmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('adfsVmDeployment')]",
        "[variables('DIADouGPODeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('adfsproxyVMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('frontendSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('adfsProxyVMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('adfsproxyNICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryADFSProxyIpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('deployHGSServer'),'Yes')]",
      "comments": "Deploy HGS VM",
      "name": "[variables('hgsVmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]",
        "[variables('DIADouGPODeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('hgsVMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('backendSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('hgsVMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('hgsNICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryHGSIpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          }
        }
      }
    },
    {
      "comments": "Deploy Azure PAW #1 VM",
      "name": "[variables('paw1VMDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AzurePAW1VMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('pawSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('paw1VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('paw1NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryAzurePAW1IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('rdshAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathNone')]"
          }
        }
      }
    },
    {
      "comments": "Deploy Azure PAW #2 VM",
      "name": "[variables('paw2VmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AzurePAW1VMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('pawSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('paw2VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('paw2NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryAzurePAW2IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('rdshAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathNone')]"
          }
        }
      }
    },
    {
      "comments": "Deploy Azure PAW #3 VM",
      "name": "[variables('paw3VMDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AzurePAW1VMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('pawSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('paw3VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('paw3NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryAzurePAW3IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('rdshAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathNone')]"
          }
        }
      }
    },
    {
      "comments": "Deploy RDS CB and LS VM #1",
      "name": "[variables('cb1VMDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AzurePAW1VMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('pawSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('cb1VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('cb1NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryCB1IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('cbAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathNone')]"
          }
        }
      }
    },
    {
      "comments": "Deploy RDS CB and LS VM #2",
      "name": "[variables('cb2VMDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AzurePAW1VMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('pawSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('cb2VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('cb2NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryCB2IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('cbAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathNone')]"
          }
        }
      }
    },
    {
      "comments": "Deploy RDS GW and Web VM #1",
      "name": "[variables('gw1VMDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AzurePAW1VMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('pawSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('gw1VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('gw1NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryGW1IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('gwAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathNone')]"
          }
        }
      }
    },
    {
      "comments": "Deploy RDS GW and Web VM #2",
      "name": "[variables('gw2VMDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AzurePAW1VMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('pawSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('gw2VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('gw2NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryGW2IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('gwAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathNone')]"
          }
        }
      }
    },
    {
      "comments": "Deploy AAD App Proxy VM #1",
      "name": "[variables('aadProxy1VMDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]",
        "[variables('DIADouGPODeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AzurePAW1VMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('pawSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('aadProxy1VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('aadProxy1NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryAADProxy1IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('aadProxyAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathT0Devices')]"
          }
        }
      }
    },
    {
      "comments": "Deploy AAD App Proxy VM #2",
      "name": "[variables('aadProxy2VMDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]",
        "[variables('DIADouGPODeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AzurePAW1VMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('pawSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('aadProxy2VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('aadProxy2NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryAADProxy2IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('aadProxyAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathT0Devices')]"
          }
        }
      }
    },
    {
      "comments": "Install ADCS on ADCS VM",
      "name": "[variables('adcsDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('adcsVmDeployment')]",
        "[variables('createADCSTemplatesDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployADCSTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adcsVMName": {
            "value": "[variables('adcsVMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "comments": "Create Certificate Templates in ADDS",
      "name": "[variables('createADCSTemplatesDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployDC2AdId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createCertificateTemplatesTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('dc2VMName')]"
          },
          "adcsVMName": {
            "value": "[variables('adcsVMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          }
        }
      }
    },
    {
      "comments": "Deploy ADFS Farm",
      "name": "[variables('adfsFarmTemplatesDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('adfsVmDeployment')]",
        "[variables('adcsDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('adfsFarmTemplatesTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adfsVMName": {
            "value": "[variables('adfsVMName')]"
          },
          "primaryADFSserver": {
            "value": "[variables('adfsVMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "configurationFunction": {
            "value": "[variables('configurationFunctionDSConADFSvm1')]"
          },
          "ADFSServiceCert": {
            "value": "[parameters('ADFSServiceCert')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "comments": "Deploy ADFS Farm on VM2",
      "name": "[variables('adfsFarmTemplatesDeploymentonVM2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('adfsVm2Deployment')]",
        "[variables('adcsDeployment')]",
        "[variables('adfsFarmTemplatesDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('adfsFarmTemplatesTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adfsVMName": {
            "value": "[variables('adfsVM2Name')]"
          },
          "primaryADFSserver": {
            "value": "[variables('adfsVMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "configurationFunction": {
            "value": "[variables('configurationFunctionDSConADFSvm2')]"
          },
          "ADFSServiceCert": {
            "value": "[parameters('ADFSServiceCert')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('deployHGSServer'),'Yes')]",
      "comments": "Deploy HGS",
      "name": "[variables('hgsDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('hgsVmDeployment')]",
        "[variables('adcsDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployHGSTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('hgsVMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "comments": "Download and install AAD Connect",
      "name": "[variables('aadconnectDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('aadConnectVmDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployAADConnectTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "aadVMName": {
            "value": "[variables('aadConnectVMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "comments": "Deploy DIAD OUs and GPOs",
      "name": "[variables('DIADouGPODeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('adcsDeployment')]",
        "[variables('gw1VMDeployment')]",
        "[variables('paw1VMDeployment')]",
        "[variables('paw2VMDeployment')]",
        "[variables('cb1VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployDIADTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('dc1VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          }
        }
      }
    },
    {
      "comments": "Deploy RDCB and RDLS on CB VM",
      "name": "[variables('cb1Deployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('cb1VMDeployment')]",
        "[variables('gw1Deployment')]",
        "[variables('rdshDeploymentOnPAW1')]",
        "[variables('rdshDeploymentOnPAW2')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployRDCBTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('cb1VMName')]"
          },
          "gwVMName": {
            "value": "[variables('gw1VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "numberOfRdshInstances": {
            "value": "[parameters('numberOfRdshInstances')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "comments": "Deploy RDGW and RDWeb on GW VM",
      "name": "[variables('gw1Deployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('gw1VMDeployment')]",
        "[variables('adcsDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployRDGWTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('gw1VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "comments": "Deploy RDSH on PAW1 - this needs to be changed to loop",
      "name": "[variables('rdshDeploymentOnPAW1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('paw1VMDeployment')]",
        "[variables('paw2VMDeployment')]",
        "[variables('adcsDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployRDSHTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('paw1VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "comments": "Deploy RDSH on PAW2 - this needs to be changed to loop",
      "name": "[variables('rdshDeploymentOnPAW2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('paw1VMDeployment')]",
        "[variables('paw2VMDeployment')]",
        "[variables('adcsDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployRDSHTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('paw2VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "comments": "Deploy AAD Proxy on VM",
      "name": "[variables('aadProxy1Deployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('aadProxy1VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployAADProxyTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('aadProxy1VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    }

  ],
  "outputs": {}
}
